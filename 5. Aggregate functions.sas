* Creating a library for proc_sql_Data;
libname procsql "/home/path/Proc_sql/data";


*** COUNT **;
PROC SQL;
	SELECT COUNT(*) AS ROW_COUNT
	FROM PROCSQL.PURCHASES;
QUIT;


** NON-MISSING COUNT **;
PROC SQL;
	SELECT COUNT(UNITS) AS NON_MISSING_COUNT
	FROM PROCSQL.PURCHASES;
QUIT;


*** MINIMUM VALUE  	***;
PROC SQL;
	SELECT MIN(PRODCOST) AS CHEAPEST 
			FORMAT=DOLLAR9.2 LABEL='LEAST EXPENSIVE'
	FROM PROCSQL.PRODUCTS;
QUIT;

**		MAXIMUM VALUE		***;
PROC SQL;
	SELECT MAX(PRODCOST) AS EXPENSIVE
			FORMAT=DOLLAR9.2 LABEL='MOST EXPENSIVE'
	FROM PROCSQL.PRODUCTS;
QUIT;


** SUM PRODUCT ***;
PROC SQL;
	SELECT SUM(UNITS * UNITCOST) AS TOTAL_PURCHASES
			FORMAT=DOLLAR14.2 LABEL='TOAL PURCHASES'
	FROM PROCSQL.PURCHASES;
QUIT;



/****		AGGREGATE WITH CONDTITION		****/
PROC SQL;
	SELECT AVG(PRODCOST) AS AVG_PRODCOST
			FORMAT=DOLLAR9.2 LABEL='AVERAGE PRODUCT COST'
	FROM PROCSQL.PRODUCTS
	WHERE UPCASE(PRODTYPE) IN ('SOFTWARE');
QUIT;


****		SUMMARIZING ACCROSS COLUMNS			***;
PROC SQL;
	SELECT PRODNUM, (INVPRICE / INVQTY) AS AVG_PRICE
			FORMAT=DOLLAR9.2 LABEL='AVERAGE INVENTORY PRICE'
	FROM PROCSQL.INVOICE;
QUIT;


/***		PREDICATES 		****/
PROC SQL;
	SELECT PRODNAME,
			PRODTYPE,
			PRODCOST
	FROM PROCSQL.PRODUCTS
	WHERE PRODCOST BETWEEN 200 AND 500;
QUIT;


**** YEAR BETWEEN ***;
PROC SQL;
	SELECT PRODNUM,
			INVENQTY,
			ORDDATE
	FROM PROCSQL.INVENTORY
	WHERE YEAR(ORDDATE) BETWEEN 1999 AND 2000;
QUIT;


PROC SQL;
	SELECT PRODNUM,
			INVENQTY,
			ORDDATE
	FROM PROCSQL.INVENTORY
	WHERE YEAR(ORDDATE) = 2000 AND
			INVENQTY > 15;
QUIT;


***		IN OPERATOR		******;
PROC SQL;
	SELECT PRODNAME,
			PRODTYPE,
			PRODCOST
	FROM PROCSQL.PRODUCTS
	WHERE UPCASE(PRODTYPE) IN ('PHONE', 'SOFTWARE');
QUIT;


******* 		NOT NULL		****;
PROC SQL;
	SELECT PRODNUM,
			INVENQTY,
			INVENCST
	FROM PROCSQL.INVENTORY
	WHERE INVENQTY IS NOT NULL;
QUIT;


